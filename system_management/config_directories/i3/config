# i3 config file (v4)
#
#  lease see https://i3wm.org/docs/userguide.html for a complete reference!
#
# This config file uses keycodes (bindsym) and was written for the QWERTY
# layout.
#
# To get a config file with the same key positions, but for your current
# layout, use the i3-config-wizard

set $mod Mod4
set $altmod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3; sleep 1

# Configure screens at startup.
# exec xrandr --output HDMI-1 --off
exec_always sh ~/.prometheus/system_management/scripts/screen/adjust_screen_size.sh; sleep 1
# xrandr --output HDMI-2 --mode 1280x720 --right-of eDP-1 --output eDP-1 --mode 1280x72

# Apply wallpaper
exec sleep 3
exec --no-startup-id nitrogen --restore &

# Customise windows
### does not work on this system for some reason.
exec_always --no-startup-id picom --config ~/.prometheus/system_management/config_directories/picom/picom.conf

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym shift+XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +1% && $refresh_i3status
bindsym shift+XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -1% && $refresh_i3status

bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status

# Use brightnessctl to adjust brightness
### When setting up, change permissions for /sys/class/backlight/intel_backlight/{actual_brightness, brightness}
bindsym Shift+XF86MonBrightnessUp exec brightnessctl set +1%
bindsym Shift+XF86MonBrightnessDown exec brightnessctl set 1%-
bindsym XF86MonBrightnessUp exec brightnessctl set +10%
bindsym XF86MonBrightnessDown exec brightnessctl set 10%-

bindsym $mod+z focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+x focus right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Alt+Tab Window Switching:
# Need to give permissions to the script
### Switch on all workspaces https://github.com/yoshimoto/i3-alt-tab.py
set $i3_mod_tab_all ~/.prometheus/system_management/scripts/gh_scripts/i3-alt-tab.py n all
set $i3_mod_shift_tab_all ~/.prometheus/system_management/scripts/gh_scripts/i3-alt-tab.py p all
bindsym $mod+Tab exec $i3_mod_tab_all
bindsym $mod+Shift+Tab exec $i3_mod_shift_tab_all
### Switch on current workspace https://github.com/sagb/alttab?tab=readme-ov-file
exec_always --no-startup-id alttab -frame "#ffffff"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# Start rofi

mode "Rofi" {

		bindsym r exec "rofi -modi run -show run"; mode "default"
		bindsym f exec "rofi -modi filebrowser -show filebrowser"; mode "default"
		bindsym d exec "rofi -modi drun -show drun"; mode "default"
		bindsym w exec "rofi -modi windowcd,window -show windowcd"; mode "default"
		bindsym a exec "rofi -modi windowcd,window,run,drun,filebrowser -show drun"; mode "default"
        
		bindsym Return mode "default"
		bindsym Escape mode "default"
}

# Activate rofi
bindsym $mod+r mode "Rofi"

# Change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

mode "Move and Resize" {

		# Move
		bindsym Left move left 100
		bindsym Down move down 100
		bindsym Up move up 100
		bindsym Right move right 100

		bindsym shift+Left move left 10
		bindsym shift+Down move down 10
		bindsym shift+Up move up 10
		bindsym shift+Right move right 10

		# Resize
		bindsym Ctrl+Left resize shrink width 100 px or 100 ppt
        bindsym Ctrl+Down resize grow height 100 px or 100 ppt
        bindsym Ctrl+Up resize shrink height 100 px or 100 ppt
        bindsym Ctrl+Right resize grow width 100 px or 100 ppt

		bindsym Ctrl+shift+Left resize shrink width 10 px or 10 ppt
        bindsym Ctrl+shift+Down resize grow height 10 px or 10 ppt
        bindsym Ctrl+shift+Up resize shrink height 10 px or 10 ppt
        bindsym Ctrl+shift+Right resize grow width 10 px or 10 ppt        		

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Move and resize window (you can also use the mouse for that)
bindsym $mod+shift+m mode "Move and Resize"

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
# Split in horizontal orientation
bindsym $mod+h split h
# Split in vertical orientation
bindsym $mod+v split v

# Focus the parent container
bindsym $mod+p focus parent
# Focus the child container
bindsym $mod+Shift+p focus child

# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Toggle tiling / floating
bindsym $mod+space floating toggle

# Change focus between tiling / floating windows
bindsym $mod+shift+space focus mode_toggle

# Move the currently focused window to the scratchpad
bindsym $mod+shift+grave move scratchpad
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+grave scratchpad show

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

mode "Applications" {

		bindsym v workspace number 1; mode "default"
		bindsym j workspace number 10; mode "default"
		bindsym c workspace number 9; mode "default"
		bindsym r workspace number 2; mode "default"
		bindsym d workspace number 3; mode "default"
        
		bindsym Return mode "default"
		bindsym Escape mode "default"
}

# Activate Applications
bindsym $mod+a mode "Applications"

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+f reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Window information and borders
default_border pixel 1

bindsym $mod+u border none
bindsym $mod+y border pixel 3
bindsym $mod+n border normal

font xft:URWGothic-Book 11

exec_always --no-startup-id . "/home/$USER/.config/polybar/launch.sh"

# Theme colors
# class                 border  backgr. text    indicator child_border
# default
client.focused			#ffffff #ffffff #000000 #ffffff #ffffff
client.focused_inactive #ffffff #ffffff #000000 #ffffff #ffffff
client.unfocused		#ffffff #000000 #ffffff #ffffff #ffffff
client.urgent 			#ffffff #000000 #ffffff #ffffff #ffffff
client.placeholder 		#ffffff #ffffff #ffffff #ffffff #ffffff


# client.background #1e1e20

# Gaps
gaps inner 2
gaps outer 2

### Try getting this to work on the new system. https://github.com/jbenden/i3-gaps-rounded?tab=readme-ov-file#rounded-window-corners
# border_radius 5

smart_gaps inverse_outer

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Move cursor with keyboard

mode "Cursor" {

	# set your three speeds here

	set $slow 5
	set $quick 50
	set $fast 150
	set $very_fast 300

	# Mouse movement (slow/fine-tuned) -- arrow keys

	bindsym shift+Left exec xdotool mousemove_relative -- -$slow 0
	bindsym shift+Down exec xdotool mousemove_relative 0 $slow
	bindsym shift+Up exec xdotool mousemove_relative -- 0 -$slow
	bindsym shift+Right exec xdotool mousemove_relative $slow 0

	# Mouse movement (quicker) -- arrow keys

	bindsym Left exec xdotool mousemove_relative -- -$quick 0
	bindsym Down exec xdotool mousemove_relative 0 $quick
	bindsym Up exec xdotool mousemove_relative -- 0 -$quick
	bindsym Right exec xdotool mousemove_relative $quick 0


	# Mouse movement (fast) -- arrow keys

	bindsym $mod+Left exec xdotool mousemove_relative -- -$fast 0
	bindsym $mod+Down exec xdotool mousemove_relative 0 $fast
	bindsym $mod+Up exec xdotool mousemove_relative -- 0 -$fast
	bindsym $mod+Right exec xdotool mousemove_relative $fast 0

	bindsym $mod+shift+Left exec xdotool mousemove_relative -- -$very_fast 0
	bindsym $mod+shift+Down exec xdotool mousemove_relative 0 $very_fast
	bindsym $mod+shift+Up exec xdotool mousemove_relative -- 0 -$very_fast
	bindsym $mod+shift+Right exec xdotool mousemove_relative $very_fast 0


	# Left Click
	bindsym f exec xdotool click 1

	# Middle Click
	bindsym d exec xdotool click 2

	# Right Click
	bindsym s exec xdotool click 3

	# Left Click-and-drag
	bindsym Shift+f exec xdotool mousedown 1

	# Middle Click-and-drag 
	bindsym Shift+d exec xdotool mousedown 2

	# Right Click-and-drag
	bindsym Shift+s exec xdotool mousedown 3

	# Left Drag release
	bindsym $mod+f exec xdotool mouseup 1

	# Middle Drag release
	bindsym $mod+d exec xdotool mouseup 2

	# Right Drag release
	bindsym $mod+s exec xdotool mouseup 3

	# return to normal keybindings -- IMPORTANT!!

	bindsym Escape mode "default"
}

bindsym $mod+Shift+c mode "Cursor"

###################

# Custom scripts

###################

# Screenshots
bindsym Print exec --no-startup-id maim "/home/$USER/Pictures/Screenshots/$(date).png" && exec notify-send "$(date).png (Screen)"
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/Screenshots/$(date).png" && exec notify-send "$(date).png (Window)"
bindsym Shift+Print exec --no-startup-id maim --select "/home/$USER/Pictures/Screenshots/$(date).png" && exec notify-send "$(date).png (Area)"

###################

###################

# Scratchpad

## Configure scratchpad windows

for_window [instance="scratchpad_alacritty"] floating enable
for_window [instance="scratchpad_alacritty"] resize set 1000 400
for_window [instance="scratchpad_alacritty"] move scratchpad
for_window [instance="scratchpad_alacritty"] border pixel 1

for_window [instance="spotify"] floating enable
for_window [instance="spotify"] resize set 800 400
for_window [instance="spotify"] move scratchpad
for_window [instance="spotify"] border pixel 1

for_window [instance="org.gnome.Nautilus"] floating enable
for_window [instance="org.gnome.Nautilus"] resize set 800 800
for_window [instance="org.gnome.Nautilus"] move scratchpad
for_window [instance="org.gnome.Nautilus"] border pixel 1

for_window [instance="trilium notes"] floating enable
for_window [instance="trilium notes"] resize set 1510 860
for_window [instance="trilium notes"] move scratchpad
for_window [instance="trilium notes"] border pixel 1

bindsym $mod+Control+Return [instance="scratchpad_alacritty"] scratchpad show
bindsym $mod+Control+s [instance="spotify"] scratchpad show
bindsym $mod+Control+t [instance="trilium"] scratchpad show
bindsym $mod+Control+n [instance="org.gnome.Nautilus"] scratchpad show

# Assign key bindings to start applications. Windows will be organised based on set parameters above.
bindsym $mod+Return exec alacritty
bindsym $mod+Control+shift+Return exec alacritty --class scratchpad_alacritty
bindsym $mod+Control+shift+j exec jupyter-notebook
bindsym $mod+Control+shift+s exec spotify
bindsym $mod+Control+shift+t exec "flatpak run com.github.zadam.trilium"
bindsym $mod+Control+shift+n exec nautilus


# Start scratchpad applications upon startup
exec --no-startup-id alacritty --class scratchpad_alacritty 
exec --no-startup-id spotify
exec --no-startup-id "flatpak run com.github.zadam.trilium"
exec --no-startup-id nautilus

###############################################################

# Ideas
### Scratchpad management mode